# combine with standard arguments for R
## PKG_CPPFLAGS = -I../inst/include -Wall
PKG_CPPFLAGS = `${R_HOME}/bin/Rscript -e "RcppGSL:::CFlags()"` -I../inst/include -Wall

## next is for valgrind, to avoid inlining
## PKG_CPPFLAGS = -fno-inline `${R_HOME}/bin/Rscript -e "RcppGSL:::CFlags()"` -I../inst/include -fno-inline -Wall

## standard
## PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` ` ${R_HOME}/bin/Rscript -e "RcppGSL:::LdFlags()"` $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)
## I am not using libgmp (multiprecission arithmetic) anymore
## PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` ` ${R_HOME}/bin/Rscript -e "RcppGSL:::LdFlags()"` $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) -lgmpxx -lgmp
## next is for profiling with google, I leave it since apparently little cost
#PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` ` ${R_HOME}/bin/Rscript -e "RcppGSL:::LdFlags()"` $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) -lgmpxx -lgmp -lprofiler

## next is for profling with gcc
## PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` ` ${R_HOME}/bin/Rscript -e "RcppGSL:::LdFlags()"` $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) -lgmpxx -lgmp -lgcov

## the next second line is what was uncommented.




